service: aws-python-sqs

frameworkVersion: '2'

plugins:
  - serverless-offline-sqs
  - serverless-offline
  
provider:
  name: aws
  region: sa-east-1
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - Fn::GetAtt: [ WorkerQueue, Arn ]

functions:
  producer:
    handler: handler.producer
    events:
      - http:
          method: post
          path: produce
    environment:
      QUEUE_URL:
        Ref: WorkerQueue

  consumer:
    handler: handler.consumer
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - WorkerQueue
              - Arn

resources:
  Resources:
    WorkerQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: workerQueue-${self:provider.stage}
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - WorkerDLQ
              - Arn
          maxReceiveCount: 5
    WorkerDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: workerDlq-${self:provider.stage}

custom:
  serverless-offline-sqs:
    autoCreate: true                 # create queue if not exists
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:8000
    region: eu-west-1
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false